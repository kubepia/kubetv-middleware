apiVersion: v1
data:
  k8s.conf: |-
    input {
        beats {
        port => 5044
        tls_min_version => 1.2
        ssl => true
        ssl_certificate_authorities => ["/usr/share/elasticsearch/config/tls/ca.crt"]
        ssl_certificate => "/usr/share/elasticsearch/config/tls/logstash.crt"
        ssl_key => "/usr/share/elasticsearch/config/tls/logstash.key"
        ssl_key_passphrase => "${APP_KEYSTORE_PASSWORD}"
        ssl_verify_mode => "force_peer"
        cipher_suites => ["TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"]
        }
    }

    filter {

        date {
            match => ["time", "ISO8601"]
        }

        # Sample:
        # tiller-1279707952-sgd08_kube-system_tiller-0c51282d195d1c21307f6a48b9118d690441cda498fc5a2790c043407eab235b.log
        # filebeat-j357d_default_filebeat-1a3113e374ad7937a3efa36c4bb42b46b976bcd7cd96223e6b9e6e3df08d802a.log
        # appstdoutpod_default_app-stdout-container-01c2e7a7b105d9141825ea3ae5634b580fdd20a5a4ee890cdbe0816ca002623c.log
        # unified-router-4047118581-sm913_kube-system_unified-router-ddda8a8cbcb74c45b64a4b18997b4f2928c998a37e45037cd0304eaa56d1634f.log
        dissect {
            mapping => {
                "source" => "/var/log/containers/%{kubernetes.pod}_%{kubernetes.namespace}_%{container_file_ext}"
            }
        }

        dissect {
            mapping => {
                "container_file_ext" => "%{container}.%{?file_ext}"
            }
            remove_field => ["host", "container_file_ext"]
        }

        grok {
            "match" => {
                "container" => "^%{DATA:kubernetes.container_name}-(?<kubernetes.container_id>[0-9A-Za-z]{64,64})"
            }
            remove_field => ["container"]
        }

        if "kube-system_nginx-ingress" in [source] {
            mutate { add_field => { "[@metadata][ingresslog]" => "true" } }
        }

        if "btv" in [source] or "dev-maria" in [source] or "dev-redis" in [source] or "dev-redis2" in [source] or "tekton-pipelines" in [source] {
            mutate { add_field => { "[@metadata][targetns]" => "true" } }

            if "cms-v" in [source] {
                if "n/a" in [log] {
                    mutate { add_field => { "membership" => "all" } }
                } else if "vip" in [log] {
                    mutate { add_field => { "membership" => "vip" } }
                }

            mutate { convert => ["membership","string"] }
            }
        }
    }

    filter {
        # Drop empty lines
        if [log] =~ /^\s*$/ {
            drop { }
        }

        # Attempt to parse JSON, but ignore failures and pass entries on as-is
        json {
            source => "log"
            skip_on_invalid_json => true
        }
    }

    output {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "logstash-%{+YYYY.MM.dd}"
            manage_template => true
            template => "/usr/share/logstash/config/es-template.json"
            template_overwrite => true
            ssl => true
            ssl_certificate_verification => true
            keystore => "/usr/share/elasticsearch/config/tls/logstash-elasticsearch-keystore.jks"
            keystore_password => "${APP_KEYSTORE_PASSWORD}"
            truststore => "/usr/share/elasticsearch/config/tls/truststore.jks"
            truststore_password => "${CA_TRUSTSTORE_PASSWORD}"
        }

        if [@metadata][targetns] == "true" {

            elasticsearch {
                hosts => "elasticsearch:9200"
                index => "logstash-%{kubernetes.namespace}-%{+YYYY.MM.dd}"
                manage_template => true
                template => "/usr/share/logstash/config/es-template.json"
                template_overwrite => true
                ssl => true
                ssl_certificate_verification => true
                keystore => "/usr/share/elasticsearch/config/tls/logstash-elasticsearch-keystore.jks"
                keystore_password => "${APP_KEYSTORE_PASSWORD}"
                truststore => "/usr/share/elasticsearch/config/tls/truststore.jks"
                truststore_password => "${CA_TRUSTSTORE_PASSWORD}"
            }

            file {
                path => "/data/log/%{kubernetes.namespace}/%{kubernetes.pod}-%{+YYYY.MM.dd}.log"
            }
        }

        if [@metadata][ingresslog] == "true" {

            elasticsearch {
                hosts => "elasticsearch:9200"
                index => "logstash-ingress-%{+YYYY.MM.dd}"
                manage_template => true
                template => "/usr/share/logstash/config/es-template.json"
                template_overwrite => true
                ssl => true
                ssl_certificate_verification => true
                keystore => "/usr/share/elasticsearch/config/tls/logstash-elasticsearch-keystore.jks"
                keystore_password => "${APP_KEYSTORE_PASSWORD}"
                truststore => "/usr/share/elasticsearch/config/tls/truststore.jks"
                truststore_password => "${CA_TRUSTSTORE_PASSWORD}"
            }

            file {
                path => "/data/log/%{kubernetes.namespace}/%{kubernetes.pod}-%{+YYYY.MM.dd}.log"
            }
        }
    }
kind: ConfigMap
metadata:
  creationTimestamp: "2020-02-18T13:43:09Z"
  labels:
    app: logging-elk-elasticsearch
    chart: ibm-icplogging-2.4.1910
    component: logstash
    heritage: Tiller
    release: logging
  name: logging-elk-logstash-pipeline-config
  namespace: kube-system
  resourceVersion: "2474805"
  selfLink: /api/v1/namespaces/kube-system/configmaps/logging-elk-logstash-pipeline-config
  uid: 9969bca4-5254-11ea-8668-0050568ea7bd
